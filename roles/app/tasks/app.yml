##10.生成 ingress

- name: label ingerss node
  command: "kubectl label node  {{hostvars[item]['hostname']}}  ingress=true  --overwrite"
  with_items: "{{ groups['ingressnode'] }}"
  when: inventory_hostname in groups['master0']

- name: cp ingress.yaml
  when: inventory_hostname in groups['master0']
  template:
    src: "ingress-nginx.yaml.j2"
    dest: "/home/ingress-nginx.yaml"

###8.  apply  ingress
- name: apply ingress
  when: inventory_hostname in groups['master0']
  command: "kubectl apply -f /home/ingress-nginx.yaml"

### pause 1 min for pod ingress ok
- name: wait 1 min for some depends on pod is ok
  pause:
    minutes: 1

## 15. test ingress
- name: cp test-ing.yaml
  when:
    - inventory_hostname in groups['master0']
  copy:
    src: "test-ing.yaml"
    dest: "/home/test-ing.yaml"

##8.  apply  ingress
- name: apply test-ingress.yaml
  when: inventory_hostname in groups['master0']
  command: "kubectl apply -f /home/test-ing.yaml"

##10.生成 local sc
- name: template storage class
  when: inventory_hostname in groups['master0']
  template:
    src: "local-sc.yaml.j2"
    dest: "/home/local-sc.yaml"

##8.  apply  local sc
- name: apply local sc
  when: inventory_hostname in groups['master0']
  command: "kubectl apply -f /home/local-sc.yaml"

## 14. metrics server
- name: cp metrics-server.yaml
  when: inventory_hostname in groups['master0']
  copy:
    src: "metrics-server.yaml"
    dest: "/home/metrics-server.yaml"

##8.  apply  local sc
- name: apply metrics-server.yaml
  when: inventory_hostname in groups['master0']
  command: "kubectl apply -f /home/metrics-server.yaml"